{
    "Mappings": {
        "ClusterSizing": {
            "5000": {
                "ec2type": "c4.2xlarge",
                "rdstype": "db.m3.medium",
                "rdsstorage": "64",
                "cachetype": "cache.m3.medium"
            }
        },
        "AWSAMIRegionMap": {
            "us-east-1": {
                "HCSAMI": "ami-5fe7d325"
            },
            "us-east-2": {
                "HCSAMI": ""
            },
            "ap-southeast-2": {
                "HCSAMI": "ami-949f61f6"
            },
            "us-west-2": {
                "HCSAMI": "ami-541aa72c"
            },
            "eu-central-1": {
                "HCSAMI": "ami-e824ba87"
            },
            "eu-west-1": {
                "HCSAMI": "ami-a15e3bd8"
            }
        }
    },
    "Parameters": {
        "AccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Default": "0.0.0.0/0",
            "Type": "String",
            "Description": "The CIDR IP range that is allowed to access HipChat. Use 0.0.0.0/0 to allow public access."
        },
        "PublicDns": {
            "Default": "test-hipchat.com",
            "ConstraintDescription": "Must be a valid URL.",
            "Type": "String",
            "Description": "The URL where users can access the application."
        },
        "BastionHostAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Default": "83.144.127.210/32",
            "Type": "String",
            "Description": "The CIDR IP range allowed SSH access to the bastion host, and to manage the HipChat cluster. Defaults to 0.0.0.0/0, which allows all access."
        },
        "Route53ZoneName": {
            "ConstraintDescription": "Must be valid route53 zone name ending with '.' if specified.",
            "Type": "String",
            "Description": "If specified, creates a DNS entry on this Route53 zone."
        },
        "KeyName": {
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Description": "Select the SSH KeyPair used for HipChat application instances"
        },
        "ClusterScale": {
            "Default": "5000",
            "Type": "String",
            "Description": "Up to this many users. Determines the instance sizes of Application Servers and Data back-ends. Smaller sizes are more cost-effective, while larger sizes allow the cluster to support more concurrent users.",
            "AllowedValues": [
                "5000"
            ]
        },
        "VPCNetworkAddress": {
            "Default": "172.19.0",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){2}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "Type": "String",
            "Description": "Network address of /24 to use for Data Center VPC. Three octets. For example: '10.0.0'"
        },
        "SSLCertificateARN": {
            "Type": "String",
            "Description": "The ARN of the SSL certificate to use"
        },
        "DBUser": {
            "Description": "Username for the RDS Database master user.",
            "Default": "hipchat",
            "MinLength": 2,
            "AllowedPattern": "^(([a-z][a-z0-9\\_]{1,}))",
            "MaxLength": 16,
            "Type": "String"
        },
        "DBUserPassword": {
            "ConstraintDescription": " 8-30 symbols, should contain at least one upper-case symbol, lower-case symbol, number and one special character (#%^&+=!).",
            "Description": "Password for the RDS Database master user password",
            "Default": "ChangeMe123!",
            "MinLength": 8,
            "AllowedPattern": "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[#%^&+=!]).{8,}$",
            "NoEcho": "True",
            "MaxLength": 30,
            "Type": "String"
        }
    },
    "AWSTemplateFormatVersion": "2010-09-09",
    "Outputs": {
        "BastionHostIP": {
            "Description": "Bastion host IP address for ssh connections",
            "Value": {
                "Fn::GetAtt": [
                    "HipChatDCStack",
                    "Outputs.BastionHostIP"
                ]
            }
        },
        "HipChatEndpoint": {
            "Description": "HipChat Endpoint.",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "https://",
                        {
                            "Ref": "PublicDns"
                        }
                    ]
                ]
            }
        }
    },
    "Description": "Atlassian HipChat Data Center",
    "Conditions": {
        "NVirginiaRegionCondition": {
            "Fn::Equals": [
                {
                    "Ref": "AWS::Region"
                },
                "us-east-1"
            ]
        }
    },
    "Resources": {
        "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "https://s3.eu-central-1.amazonaws.com/cf-hipchat-test/aws-vpc.template",
                "Parameters": {
                    "PrivateSubnet3ACIDR": {
                        "Fn::Join": [
                            ".",
                            [
                                {
                                    "Ref": "VPCNetworkAddress"
                                },
                                "64/27"
                            ]
                        ]
                    },
                    "PrivateSubnet1ACIDR": {
                        "Fn::Join": [
                            ".",
                            [
                                {
                                    "Ref": "VPCNetworkAddress"
                                },
                                "0/27"
                            ]
                        ]
                    },
                    "NumberOfAZs": "2",
                    "PublicSubnet3CIDR": {
                        "Fn::Join": [
                            ".",
                            [
                                {
                                    "Ref": "VPCNetworkAddress"
                                },
                                "160/27"
                            ]
                        ]
                    },
                    "PublicSubnet1CIDR": {
                        "Fn::Join": [
                            ".",
                            [
                                {
                                    "Ref": "VPCNetworkAddress"
                                },
                                "96/27"
                            ]
                        ]
                    },
                    "VPCCIDR": {
                        "Fn::Join": [
                            ".",
                            [
                                {
                                    "Ref": "VPCNetworkAddress"
                                },
                                "0/24"
                            ]
                        ]
                    },
                    "AvailabilityZones": {
                        "Fn::If": [
                            "NVirginiaRegionCondition",
                            {
                                "Fn::Join": [
                                    ",",
                                    [
                                        {
                                            "Fn::Select": [
                                                "0",
                                                {
                                                    "Fn::GetAZs": {
                                                        "Ref": "AWS::Region"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "Fn::Select": [
                                                "2",
                                                {
                                                    "Fn::GetAZs": {
                                                        "Ref": "AWS::Region"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "Fn::Select": [
                                                "3",
                                                {
                                                    "Fn::GetAZs": {
                                                        "Ref": "AWS::Region"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                ]
                            },
                            {
                                "Fn::Join": [
                                    ",",
                                    [
                                        {
                                            "Fn::Select": [
                                                "0",
                                                {
                                                    "Fn::GetAZs": {
                                                        "Ref": "AWS::Region"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "Fn::Select": [
                                                "1",
                                                {
                                                    "Fn::GetAZs": {
                                                        "Ref": "AWS::Region"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "Fn::Select": [
                                                "2",
                                                {
                                                    "Fn::GetAZs": {
                                                        "Ref": "AWS::Region"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                ]
                            }
                        ]
                    },
                    "PrivateSubnet2ACIDR": {
                        "Fn::Join": [
                            ".",
                            [
                                {
                                    "Ref": "VPCNetworkAddress"
                                },
                                "32/27"
                            ]
                        ]
                    },
                    "PublicSubnet2CIDR": {
                        "Fn::Join": [
                            ".",
                            [
                                {
                                    "Ref": "VPCNetworkAddress"
                                },
                                "128/27"
                            ]
                        ]
                    },
                    "KeyPairName": {
                        "Ref": "KeyName"
                    }
                }
            }
        },
        "HipChatDCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "https://s3.eu-central-1.amazonaws.com/cf-hipchat-test/HipChatDataCenter.template",
                "TimeoutInMinutes": "30",
                "Parameters": {
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "PrivateSubnetCIDRs": {
                        "Fn::Join": [
                            ",",
                            [
                                {
                                    "Fn::GetAtt": [
                                        "VPCStack",
                                        "Outputs.PrivateSubnet1ACIDR"
                                    ]
                                },
                                {
                                    "Fn::GetAtt": [
                                        "VPCStack",
                                        "Outputs.PrivateSubnet2ACIDR"
                                    ]
                                },
                                {
                                    "Fn::GetAtt": [
                                        "VPCStack",
                                        "Outputs.PrivateSubnet3ACIDR"
                                    ]
                                }
                            ]
                        ]
                    },
                    "Route53ZoneName": {
                        "Ref": "Route53ZoneName"
                    },
                    "DBUser": {
                        "Ref": "DBUser"
                    },
                    "KeyPairName": {
                        "Ref": "KeyName"
                    },
                    "NumberOfAZs": "2",
                    "PublicSubnets": {
                        "Fn::Join": [
                            ",",
                            [
                                {
                                    "Fn::GetAtt": [
                                        "VPCStack",
                                        "Outputs.PublicSubnet1ID"
                                    ]
                                },
                                {
                                    "Fn::GetAtt": [
                                        "VPCStack",
                                        "Outputs.PublicSubnet2ID"
                                    ]
                                },
                                {
                                    "Fn::GetAtt": [
                                        "VPCStack",
                                        "Outputs.PublicSubnet3ID"
                                    ]
                                }
                            ]
                        ]
                    },
                    "BastionHostAccessCIDR": {
                        "Ref": "BastionHostAccessCIDR"
                    },
                    "ClusterNodeCount": "3",
                    "CacheClusterType": {
                        "Fn::FindInMap": [
                            "ClusterSizing",
                            {
                                "Ref": "ClusterScale"
                            },
                            "cachetype"
                        ]
                    },
                    "DBName": "hipchat_postgres",
                    "DBInstanceType": {
                        "Fn::FindInMap": [
                            "ClusterSizing",
                            {
                                "Ref": "ClusterScale"
                            },
                            "rdstype"
                        ]
                    },
                    "PublicDns": {
                        "Ref": "PublicDns"
                    },
                    "PrivateSubnets": {
                        "Fn::Join": [
                            ",",
                            [
                                {
                                    "Fn::GetAtt": [
                                        "VPCStack",
                                        "Outputs.PrivateSubnet1AID"
                                    ]
                                },
                                {
                                    "Fn::GetAtt": [
                                        "VPCStack",
                                        "Outputs.PrivateSubnet2AID"
                                    ]
                                },
                                {
                                    "Fn::GetAtt": [
                                        "VPCStack",
                                        "Outputs.PrivateSubnet3AID"
                                    ]
                                }
                            ]
                        ]
                    },
                    "AccessCIDR": {
                        "Ref": "AccessCIDR"
                    },
                    "SSLCertificateARN": {
                        "Ref": "SSLCertificateARN"
                    },
                    "NAT2EIP": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.NAT2EIP"
                        ]
                    },
                    "NAT1EIP": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.NAT1EIP"
                        ]
                    },
                    "AMIID": {
                        "Fn::FindInMap": [
                            "AWSAMIRegionMap",
                            {
                                "Ref": "AWS::Region"
                            },
                            "HCSAMI"
                        ]
                    },
                    "ClusterNodeType": {
                        "Fn::FindInMap": [
                            "ClusterSizing",
                            {
                                "Ref": "ClusterScale"
                            },
                            "ec2type"
                        ]
                    },
                    "NAT3EIP": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.NAT3EIP"
                        ]
                    },
                    "VPCCIDR": {
                        "Fn::Join": [
                            ".",
                            [
                                {
                                    "Ref": "VPCNetworkAddress"
                                },
                                "0/24"
                            ]
                        ]
                    },
                    "DBInstanceAllocatedStorage": {
                        "Fn::FindInMap": [
                            "ClusterSizing",
                            {
                                "Ref": "ClusterScale"
                            },
                            "rdsstorage"
                        ]
                    },
                    "AvailabilityZones": {
                        "Fn::If": [
                            "NVirginiaRegionCondition",
                            {
                                "Fn::Join": [
                                    ",",
                                    [
                                        {
                                            "Fn::Select": [
                                                "0",
                                                {
                                                    "Fn::GetAZs": {
                                                        "Ref": "AWS::Region"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "Fn::Select": [
                                                "2",
                                                {
                                                    "Fn::GetAZs": {
                                                        "Ref": "AWS::Region"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "Fn::Select": [
                                                "3",
                                                {
                                                    "Fn::GetAZs": {
                                                        "Ref": "AWS::Region"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                ]
                            },
                            {
                                "Fn::Join": [
                                    ",",
                                    [
                                        {
                                            "Fn::Select": [
                                                "0",
                                                {
                                                    "Fn::GetAZs": {
                                                        "Ref": "AWS::Region"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "Fn::Select": [
                                                "1",
                                                {
                                                    "Fn::GetAZs": {
                                                        "Ref": "AWS::Region"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "Fn::Select": [
                                                "2",
                                                {
                                                    "Fn::GetAZs": {
                                                        "Ref": "AWS::Region"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                ]
                            }
                        ]
                    },
                    "DBUserPassword": {
                        "Ref": "DBUserPassword"
                    }
                }
            },
            "DependsOn": "VPCStack"
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Parameters": [
                        "ClusterScale",
                        "PublicDns",
                        "Route53ZoneName",
                        "SSLCertificateARN",
                        "KeyName"
                    ],
                    "Label": {
                        "default": "Required Parameters"
                    }
                },
                {
                    "Parameters": [
                        "VPCNetworkAddress",
                        "AccessCIDR",
                        "DBUser",
                        "DBUserPassword",
                        "BastionHostAccessCIDR"
                    ],
                    "Label": {
                        "default": "Advanced and Optional Parameters"
                    }
                }
            ],
            "ParameterLabels": {
                "AccessCIDR": {
                    "default": "Whitelisted IP range"
                },
                "PublicDns": {
                    "default": "URL"
                },
                "BastionHostAccessCIDR": {
                    "default": "Bastion host SSH access range"
                },
                "Route53ZoneName": {
                    "default": "DNS zone (optional)"
                },
                "KeyName": {
                    "default": "SSH key pair"
                },
                "ClusterScale": {
                    "default": "Cluster user limit"
                },
                "VPCNetworkAddress": {
                    "default": "Dedicated VPC network address"
                },
                "SSLCertificateARN": {
                    "default": "SSL certificate ARN"
                },
                "DBUser": {
                    "default": "RDS database user"
                },
                "DBUserPassword": {
                    "default": "RDS database password"
                }
            }
        }
    }
}
